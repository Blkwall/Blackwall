// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Home documents */
interface HomeDocumentData {
    /**
     * Slice Zone field in *Home*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: home.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomeDocumentDataSlicesSlice>;
}
/**
 * Slice for *Home → Slice Zone*
 *
 */
type HomeDocumentDataSlicesSlice = SceneObjectSlice;
/**
 * Home document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomeDocumentData>, "home", Lang>;
export type AllDocumentTypes = HomeDocument;
/**
 * Primary content in SceneObject → Primary
 *
 */
interface SceneObjectSliceDefaultPrimary {
    /**
     * image field in *SceneObject → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: scene_object.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * layers field in *SceneObject → Primary*
     *
     * - **Field Type**: Number
     * - **Placeholder**: *None*
     * - **API ID Path**: scene_object.primary.layers
     * - **Documentation**: https://prismic.io/docs/core-concepts/number
     *
     */
    layers: prismicT.NumberField;
}
/**
 * Default variation for SceneObject Slice
 *
 * - **API ID**: `default`
 * - **Description**: `SceneObject`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SceneObjectSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<SceneObjectSliceDefaultPrimary>, never>;
/**
 * Primary content in SceneObject → Primary
 *
 */
interface SceneObjectSliceSceneObjectVideoPrimary {
    /**
     * video field in *SceneObject → Primary*
     *
     * - **Field Type**: Link to Media
     * - **Placeholder**: *None*
     * - **API ID Path**: scene_object.primary.video
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    video: prismicT.LinkToMediaField;
    /**
     * layers field in *SceneObject → Primary*
     *
     * - **Field Type**: Number
     * - **Placeholder**: *None*
     * - **API ID Path**: scene_object.primary.layers
     * - **Documentation**: https://prismic.io/docs/core-concepts/number
     *
     */
    layers: prismicT.NumberField;
}
/**
 * Scene Object Video variation for SceneObject Slice
 *
 * - **API ID**: `sceneObjectVideo`
 * - **Description**: `SceneObject`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SceneObjectSliceSceneObjectVideo = prismicT.SharedSliceVariation<"sceneObjectVideo", Simplify<SceneObjectSliceSceneObjectVideoPrimary>, never>;
/**
 * Slice variation for *SceneObject*
 *
 */
type SceneObjectSliceVariation = SceneObjectSliceDefault | SceneObjectSliceSceneObjectVideo;
/**
 * SceneObject Shared Slice
 *
 * - **API ID**: `scene_object`
 * - **Description**: `SceneObject`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SceneObjectSlice = prismicT.SharedSlice<"scene_object", SceneObjectSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { HomeDocumentData, HomeDocumentDataSlicesSlice, HomeDocument, AllDocumentTypes, SceneObjectSliceDefaultPrimary, SceneObjectSliceDefault, SceneObjectSliceSceneObjectVideoPrimary, SceneObjectSliceSceneObjectVideo, SceneObjectSliceVariation, SceneObjectSlice };
    }
}
